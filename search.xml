<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>golang简易版发布订阅</title>
      <link href="/2020/01/31/golang%E7%AE%80%E6%98%93%E7%89%88%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/"/>
      <url>/2020/01/31/golang%E7%AE%80%E6%98%93%E7%89%88%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/</url>
      
        <content type="html"><![CDATA[<h1 id="golang简易版发布订阅模型"><a href="#golang简易版发布订阅模型" class="headerlink" title="golang简易版发布订阅模型"></a>golang简易版发布订阅模型</h1><p>转载自《Go语言高级编程》  </p><h2 id="source-code"><a href="#source-code" class="headerlink" title="source code"></a>source code</h2><pre class=" language-golang"><code class="language-golang">package pubsubimport (    "sync"    "time")type (    subscriber chan interface{}         // 订阅者为一个管道    topicFunc  func(v interface{}) bool //主题为一个过滤器)// 发布者对象type Publisher struct {    m           sync.RWMutex    buffer      int    timeout     time.Duration    subscribers map[subscriber]topicFunc // 订阅者对象}// 订阅一个发布者对象，可设置发布超时时间和缓存队列的长度func NewPublisher(publishTimeout time.Duration, buffer int) *Publisher {    return &Publisher{        buffer:      buffer,        timeout:     publishTimeout,        subscribers: make(map[subscriber]topicFunc),    }}// 添加一个新的订阅者，订阅全部主题func (p *Publisher) Subscribe() chan interface{} {    return p.SubscribeTopic(nil)}// 添加一个新的订阅者，订阅过滤器筛选后的主题func (p *Publisher) SubscribeTopic(topic topicFunc) chan interface{} {    ch := make(chan interface{}, p.buffer)    p.m.Lock()    p.subscribers[ch] = topic    p.m.Unlock()    return ch}// 退出订阅func (p *Publisher) Evict(sub chan interface{}) {    p.m.Lock()    defer p.m.Unlock()    delete(p.subscribers, sub)    close(sub)}// 发布一个主题func (p *Publisher) Publish(v interface{}) {    p.m.Lock()    defer p.m.Unlock()    var wg sync.WaitGroup    for sub, topic := range p.subscribers {        wg.Add(1)        go p.sendTopic(sub, topic, v, &wg)    }    wg.Wait()}// 关闭发布者对象，同时关闭所有的订阅者管道func (p *Publisher) Close() {    p.m.Lock()    defer p.m.Unlock()    for sub := range p.subscribers {        delete(p.subscribers, sub)        close(sub)    }}// 发送主题，可以容忍一定的超时func (p *Publisher) sendTopic(sub subscriber, topic topicFunc, v interface{}, wg *sync.WaitGroup) {    defer wg.Done()    if topic != nil && !topic(v) {        return    }    select {    case sub <- v:    case <-time.After(p.timeout):    }}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 发布订阅 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R.I.P For Kobe Bryant</title>
      <link href="/2020/01/27/rip4kobe/"/>
      <url>/2020/01/27/rip4kobe/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2020/01/27/gdYVhI4rDMRUzKj.jpg" alt="youngkobe.jpg"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>闲聊记事（一）</title>
      <link href="/2020/01/27/%E9%97%B2%E8%81%8A%E8%AE%B0%E4%BA%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/01/27/%E9%97%B2%E8%81%8A%E8%AE%B0%E4%BA%8B%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="关于新型冠状病毒"><a href="#关于新型冠状病毒" class="headerlink" title="关于新型冠状病毒"></a>关于新型冠状病毒</h2><p>截至到现在（1月26日 23：31），丁香网实时统计的全国确诊人数已达2076例。从前，这些数字，我往往无感，总觉得太遥远。如今，这些数字却化为了恐惧，如同羊水般包裹在周围。   </p><p>我一直以为自己不怕死，看来还是高估了自己。现在才发现，如果人都是突然间死亡的，那么怕是没有人会恐惧死亡。最令人害怕的，还是死亡逼近的过程，亦或是拖拉着镰刀而来的死神，一步步靠近。这种感觉，真tn的刺激。   </p><p>今日凌晨刷虎扑，不时看到几个放出口罩链接的帖子，每每点击进去一看，都是售罄。明日还是去劳保市场看看是否有口罩卖吧。   </p><h2 id="关于春节"><a href="#关于春节" class="headerlink" title="关于春节"></a>关于春节</h2><p>现在还是庚子年元月初二，晚上也草草地回到了杭州。回到房间后，从没聊过天的室友们，一个都没回来，也是哦，这个点都是在家里。寻摸着一个便利店买了一大瓶水后，便又回了房间。   </p><p>今年，哦不，去年的大年三十，对即将来到的新的一年完全没有期盼，因此也没有许愿的念头。偶尔的祝福短信，也礼貌而简洁地回复了。   </p><p>至于为什么会这样，我想是2019年过的并不如意。年初、年中，工作上各种波折、失意；年末，生活上又遭遇打击。想了想，现在也算是心态好。安于现状，但也试图改变。   </p><p>好在，我也完全不记得前年许下的愿望，所以就让失意的2019失忆下去吧。生活的琐事总是不记得这也是我为数不多的优点了。</p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>摸鱼摸到初三凌晨了，略有睡意。ipad上的爱情公寓5这一集也快放完了，那就洗洗睡吧。    </p><p><img src="https://i.loli.net/2020/01/27/rKYtTXmngJkUpa8.jpg" alt="晚安.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Atidat blog</title>
      <link href="/2020/01/24/Hello-Atidat-blog/"/>
      <url>/2020/01/24/Hello-Atidat-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="This-is-my-first-blog"><a href="#This-is-my-first-blog" class="headerlink" title="This is my first blog"></a>This is my first blog</h1><h2 id="This-is-second-title"><a href="#This-is-second-title" class="headerlink" title="This is second title"></a>This is second title</h2><p>Hexo is so brilliant!</p>]]></content>
      
      
      
        <tags>
            
            <tag> what&#39;s that? </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/01/23/hello-world/"/>
      <url>/2020/01/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
